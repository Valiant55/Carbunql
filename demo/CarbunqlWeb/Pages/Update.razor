@page "/update"
@using Carbunql.Analysis;
@using Carbunql;
@using Carbunql.Building;

<PageTitle>To Update Query</PageTitle>

<div class="container-fluid">
    <div class="row" Style="margin: 0px 0px 16px 0px;">
        <RadzenMenu class="rz-shadow-3">
            <RadzenMenuItem Text="Clear SQL" Icon="clear" Click=@OnClear>
            </RadzenMenuItem>
        </RadzenMenu>
    </div>
	<div class="row">
		<div class="col-md-12 p-3">
			<RadzenText TextStyle="TextStyle.H4">To Update Query</RadzenText>
		</div>
	</div>
	<div class="row">
		<div class="col-md-6 p-3">
			<RadzenCard>
				<RadzenText TextStyle="TextStyle.Subtitle2">Update table name</RadzenText>
				<RadzenTextBox Change=@OnChange @bind-Value=@table />

				<RadzenText TextStyle="TextStyle.Subtitle2">Key columns</RadzenText>
				<RadzenTextBox Change=@OnChange @bind-Value=@keys />
			</RadzenCard>
		</div>
	</div>
    <div class="row">
		<div class="col-md-6 p-3">
			<RadzenCard>
				<RadzenText TextStyle="TextStyle.Subtitle2">Input</RadzenText>
				<RadzenTextArea @bind-Value=@sql TValue="string" Change=@OnChange Style="width: 100%; min-height: 600px; font-family: 'Ricty Diminished', SFMono-Regular, Consolas, 'Courier New', 'BIZ UDGothic', Meiryo, monospace; font-size: 18px; white-space: pre;" Placeholder="Enter select query(ex. select id, value from table)" />
			</RadzenCard>
        </div>
		<div class="col-md-6 p-3">
			<RadzenCard>
				<RadzenText TextStyle="TextStyle.Subtitle2">Result</RadzenText>
				<RadzenTextArea @bind-Value=@fsql TValue="string" Change=@OnChange Style="width: 100%; min-height: 600px; font-family: 'Ricty Diminished', SFMono-Regular, Consolas, 'Courier New', 'BIZ UDGothic', Meiryo, monospace; font-size: 18px; white-space: pre;" ReadOnly="true" />
			</RadzenCard>
        </div>
    </div>
</div>

@code {
	string sql = @"select a.id, a.sub_id, a.v1, a.v2 from table as a";

	string fsql = string.Empty;

	string table = "destinations";

	string keys = "id, sub_id";

	protected override void OnInitialized()
	{
		OnChange();
	}

	void OnClear()
	{
		sql = string.Empty;
		OnChange();
	}

	void OnChange()
	{
		if (string.IsNullOrEmpty(sql))
		{
			fsql = string.Empty;
			return;
		}
		try
		{
			var groupkeys = keys.Split(",").ToList().Select(x => x.Trim()).ToList();
			var sq = QueryParser.Parse(sql);
			fsql = sq.ToUpdateQuery(table, groupkeys).ToCommand().CommandText;
		}
		catch (Exception ex)
		{
			fsql = ex.ToString();
		}
	}
}